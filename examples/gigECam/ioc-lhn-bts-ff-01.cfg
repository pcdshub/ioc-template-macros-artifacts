#
# CONFIG file for gigE Camera
#

RELEASE=/reg/g/pcds/epics/ioc/common/gigECam/R5.0.3
TARGET_ARCH	= rhel7-x86_64

ENGINEER	= "Lana Jansen-Whealey (ljansen7)"
LOCATION	= "Laser Hall, Beam Transport System FF camera"

# Required macros
# HUTCH is needed for the python viewer and to set SCREENS_TOP, the edm launch directory
HUTCH           = las

# Optional: SCREENS_TOP, defaults to EPICS_SITE_TOP/3.14-dev/screens/edm/HUTCH/current
# SCREENS_TOP	= ?
#beepboop
IOC_PV		= IOC:LAS:LHN:BTS:CAM:02
CAM_PV	    	= LAS:LHN:BTS:CAM:02

# EVR is optional but if used needs EVR_PV, EVR_TYPE, and EVR_TRIG
#EVR_PV	        = EVR:LAS:LHN:01:FF
#EVR_TYPE	= SLAC
#EVR_TRIG	= 9
#ErDebug         = 0

# Options for CAM_TYPE are: aravis, Basler, AVT_Manta, prosilica
CAM_TYPE        = Basler

# For available MODEL options, see
# $RELEASE/db/$MODEL.env
MODEL		= Basler_acA1440-73gm

#
# Required Network macros
#
# CAM_IP can be hostname or IP address
# Use IP addr for aravisGigE cameras
CAM_IP		= 172.21.160.21

# Define these macros for network bandwidth monitoring
#   NET_IF: PV's are $CAM:$NET_IF:RX and TX
#	NET_IF_NUM: Interface as determined by I/F order
#				in zero based output of "sar -n DEV 1 1"
# Typically these will be ETH0 and 1 since localhost adapter is often 0
# but for rhel7 may be ENO1 and 0 or other.
NET_IF		= ETH0
NET_IF_NUM	= 1

# The MJPG plugin needs a unique HTTP port number
# MJPG stream viewable via http://ioc-hutch-name:$HTTP_PORT/MJPG1.mjpg
HTTP_PORT	= 7802

# Image streams
# Each image stream has it's own dedicated ROI and CC plugin
# and will in the future have some glue logic to help manage
# the port connections, automatic initialization, ROI On/Off, etc
# For now setup is still manual on first boot but is saved via autosave.
# For image viewing, we typically want a 2x2 ROI and 10hz frame rate
# for our large resolution cameras to void overloading the network or hosts.
# Example:
# ImageName, ArrayData PV,				ROI plugin prefix	ROI Port
#	IMAGE2	 $(CAM):IMAGE2:ArrayData	$(CAM):IMAGE2:ROI	IMAGE2:ROI
# Three types of streams are supported via the required NAME parameter:
#	data		Intended for data recording at up to full rate and resolution
#	viewer		Intended for viewing via edm or python viewers
#	thumbnail	Intended for small low res low frame rate image monitoring via a 130x174 edm widget 
#
# For now, data and viewer get the same plugins and differ only in
# how they are configured and used.  Later glue logic for setup and control
# will differ for these.
# Thumbnails get much the same plugins, but the ArrayData is UINT8 even for 16 bit cameras
#
# Optional Stream Parameters: (More to be added later)
#	IMAGE_NAME	Defaults to DATA1, IMAGE1, or THUMBNAIL depending on the type of stream
STREAM(NAME=data,IMAGE_NAME=DATA1)
STREAM(NAME=viewer,IMAGE_NAME=IMAGE1)
STREAM(NAME=viewer,IMAGE_NAME=IMAGE2)
STREAM(NAME=thumbnail,IMAGE_NAME=THUMBNAIL)

PLUGINS		= commonPlugins
